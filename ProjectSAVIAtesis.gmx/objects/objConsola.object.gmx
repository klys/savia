<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprite1</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>for(fi = 0; fi &lt;= 100; fi++)
{
    text[fi] = ""
    prevText[fi] = ""
    color[fi] = c_black
    alpha[fi] = 1;
}

NewText = ""
NewColor = c_black
staticAlpha = false
manualAlpha = 1
BeginLine = 0
EndLine = 7
TextBoxMsg = false

Console_TextAdd("Usa el comando /ayuda para obtener importante informacion de inicio.",c_red)

event_user(1)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="61">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (BeginLine&gt;0) and (EndLine &gt;5) {
    BeginLine--;
    EndLine--;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="60">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (BeginLine&lt;15) and (EndLine &lt; 100) {
    BeginLine++;
    EndLine++;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Rescaling
y = view_hview[0] - 32*6
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Add New Text Line
if TextBoxMsg {
    TextBoxMsg = false;
    var fq;
    for (fq = 20; fq &gt;0; fq--) {
        prevText[fq] = prevText[fq-1]
    }
    prevText[0] = NewLine;
}
if !(string_char_at(NewLine,1) == "/")
{
    var fk;
    for(fk = 20; fk &gt; 0; fk--)
    {
        text[fk] = text[fk-1]
        color[fk] = color[fk-1]
        alpha[fk] = alpha[fk-1]
    }
    text[0] = NewLine;
    color[0] = NewColor;
    alpha[0] = 1;
}
else
{
    CommandHandler(NewLine);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//draw_sprite(sprite_index,0,x,y)

if !staticAlpha 
{
        //draw_set_alpha(1)
    draw_set_font(consoleFont)
    var fj;
    var counter;
    counter = 0;
    for(fj = EndLine; fj &gt;= BeginLine; fj--)
    {
        counter++;
        alpha[fj] -= 0.01
        draw_set_color(color[fj])
        draw_set_alpha(alpha[fj])
        draw_text(x-25,y+15*counter,string(text[fj]))
    }
}
else
{
    
    //manualAlpha-= 0.01;
   draw_set_alpha(1)
   draw_set_font(consoleFont)
    var fj;
    var counter;
    counter = 0;
    for(fj = EndLine; fj &gt;= BeginLine; fj--)
    {
        counter++;
        draw_set_color(color[fj])
        draw_text(x-25,y+15*counter,string(text[fj]))
    }
}
with(all) draw_set_alpha(1)
/*
for(fj = BeginLine; fj &lt;= EndLine; fj++)
{
    counter++;
    draw_set_color(color[fj])
    draw_text(x+15,y+20*counter,string(text[fj]))
}
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="121">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Ocultar/Mostrar Consola

if staticAlpha 
{
    staticAlpha = false;
    with(objConsoleTextBox) visible = false;
}
else{
    with(objConsoleTextBox) visible = true;
    staticAlpha = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="120">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Win_Msg("[Mensajito]","Este es un mensaje de prueba # con varias lineas #otra linea.")
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
