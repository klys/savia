<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spriteMaskActividad</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>objMovedorEvento</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited()
// Main Vars
strNombre = "Nodo."
mostrarVarId = 0
nextActCount = -1
prevActCount = -1
vCount = -1
//nextAct = ds_list_create()
//prevAct = ds_list_create()
//nextActColor
for(var i = 0; i &lt;= 20; i++)
{
    ES[i] = 0 // Early Start segun varId
    LF[i] = 0 // Late Finish segun varId

    nextAct[i] = noone
    prevAct[i] = noone
    
    for(var j = 0; j &lt;= 20; j++)
    {
        nextActColor[i,j] = c_black
        prevActColor[i,j] = c_black
    }
}

// Draw Vars
pixelName = 0
pixelVar = 0
titulo = ""
event_user(0)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="8">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with(instance_create(x,y,objMenuEvento))
{
    Caption = "["+ other.strNombre +"]"
    invocador = other.id
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with(objCursorSelection) instance_destroy()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>pixelName = string_pixelMitad(strNombre)
pixelVar = string_pixelMitad(string(ES[mostrarVarId])+" / "+string(LF[mostrarVarId]))
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited()
draw_set_font(defaultFont)
draw_set_color(c_black)

draw_circle(x,y,25,1)
draw_text(x-pixelName*0.8,y-20,strNombre)

draw_set_color(c_red)
draw_text(x-15,y-45,titulo)

draw_text(x-pixelVar*0.8,y-5,string(ES[mostrarVarId])+" / "+string(LF[mostrarVarId]))
draw_set_color(c_black)

if (nextActCount &gt;= 0)
{
    for(var i = 0; i &lt;= nextActCount; i++)
    {
        if (nextAct[i] != noone) and instance_exists(nextAct[i])
        {
            draw_set_color(nextActColor[mostrarVarId,i])
            //draw_line(x,y,nextAct[mostrarVarId,i].x,nextAct[mostrarVarId,i].y)
            draw_line(x,y,nextAct[i].x,nextAct[i].y)
            var xn, yn;
            xn = nextAct[i].x;
            yn = nextAct[i].y;
            draw_sprite_ext(sprite13,0,(x+xn)/2,(y+yn)/2,1,1,point_direction(x,y,xn,yn),nextActColor[mostrarVarId,i],1)
        }
    }
}
if (prevActCount &gt;= 0)
{
    for(var i = 0; i &lt;= prevActCount; i++)
    {
        if (prevAct[i] != noone) and instance_exists(prevAct[i])
        {
            draw_set_color(prevActColor[mostrarVarId,i])
            draw_line(x,y,prevAct[i].x,prevAct[i].y)
            var xp, yp;
            xp = prevAct[i].x;
            yp = prevAct[i].y;
            draw_sprite_ext(sprite13,0,(x+xp)/2,(y+yp)/2,1,1,point_direction(xp,yp,x,y),prevActColor[mostrarVarId,i],1)
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
